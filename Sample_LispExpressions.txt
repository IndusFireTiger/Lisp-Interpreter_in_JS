(+ 2 3 5)
(- 4 3 1)
(* 2 3 2)
(/ 4 2 2)
(> 4 2)
(< 4 2)
(>= 4 4)
(<= 3 4)
(max 1 2 3 4 5)
(min 1 2 3 4 5)
(if (> 10 20) (+ 1 1) (+ 3 3))
(if (> 10 20) (+ 1 1) (+ 3 3)) (if (< 10 20) (+ 1 1) (+ 3 3))
(if (< 1 2) (if (> 2 1) (+ 1 2 3 4) (+ 3 3)) (+ 3 3))
(if (< 1 2) (if (< 2 1) (+ 1 1) (+ 3 3)) (+ 4 4))
(if (> 1 2) (if (< 2 1) (+ 1 1) (+ 3 3)) (+ 4 4))
(if (> 1 2) (if (< 2 1) (+ 1 1) (+ 3 3)) (max 9 4))
(if (<= 1 2) (if (>= 2 1) (min 7 0) (+ 3 3)) (max 9 4))
(define y 5)
(define l 5)
(define z 1)
(define add (lambda x (+ x x)))
(define sub (lambda (x y) (- x y z)))
(sub 4 2)
(lambda (x y) (+ x y) 1)
(lambda (a b) (if(< a b) (+ a a) (+ b b)) 10 20)
(lambda (n m) (if(< n m) (add n) (add m)) 12 14)
(lambda (i k) (lambda (i) (+ i k y) 15) 1 3)
(lambda (i k) (lambda (i) (+ i k y)) 77 77)
(lambda (i k) (lambda (i) (+ i k y) 1) 2 3)
(print 4 5)
